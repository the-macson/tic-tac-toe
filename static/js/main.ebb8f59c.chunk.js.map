{"version":3,"sources":["Components/Icon.js","App.js","reportWebVitals.js","index.js"],"names":["Icon","choice","className","a","Array","fill","App","useState","isCross","setIsCross","winMessage","setWinMessage","changeItem","index","toast","type","Container","position","Row","Col","md","Button","onClick","map","value","Card","CardBody","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebb8f59c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FaTimes, FaPen, FaRegCircle } from \"react-icons/fa\";\r\nimport \"../index.css\";\r\n\r\nconst Icon = ({ choice }) => {\r\n  switch (choice) {\r\n    case \"cross\":\r\n      return <FaTimes className=\"icon\" />;\r\n    case \"circle\":\r\n      return <FaRegCircle className=\"icon\" />;\r\n    default:\r\n      return <FaPen className=\"icon\" />;\r\n  }\r\n};\r\nexport default Icon;\r\n","import React, { useState } from \"react\";\nimport Icon from \"./Components/Icon\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { Button, Container, Card, CardBody, Row, Col } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./index.css\";\nimport \"./style.css\";\nimport { FaIceCream, FaRegCircle, FaTimes } from \"react-icons/fa\";\n// import { FaRegCircle, FaTimes } from 'react-icons/fa';\n\nconst a = new Array(9).fill(\"\");\nconst App = () => {\n  let [isCross, setIsCross] = useState(true);\n  let [winMessage, setWinMessage] = useState(\"\");\n  const playAgain = () => {\n    setIsCross(true);\n    setWinMessage(\"\");\n    a.fill(\"\");\n  };\n  const findWinner = () => {\n    if (a[0] === a[1] && a[0] === a[2] && a[0] !== \"\") {\n      setWinMessage(a[0] + \" has won\");\n    } else if (a[3] === a[4] && a[3] === a[5] && a[3] !== \"\") {\n      setWinMessage(a[3] + \" has won\");\n    } else if (a[6] === a[7] && a[6] === a[8] && a[6] !== \"\") {\n      setWinMessage(a[6] + \" has won\");\n    } else if (a[0] === a[3] && a[0] === a[6] && a[0] !== \"\") {\n      setWinMessage(a[0] + \" has won\");\n    } else if (a[1] === a[4] && a[1] === a[7] && a[1] !== \"\") {\n      setWinMessage(a[1] + \" has won\");\n    } else if (a[2] === a[5] && a[2] === a[8] && a[2] !== \"\") {\n      setWinMessage(a[2] + \" has won\");\n    } else if (a[2] === a[4] && a[2] === a[6] && a[2] !== \"\") {\n      setWinMessage(a[2] + \" has won\");\n    } else if (a[0] === a[4] && a[0] === a[8] && a[0] !== \"\") {\n      setWinMessage(a[0] + \" has won\");\n    }\n    // code of match is tie\n    else if (\n      (a[0] === \"circle\" || a[0] === \"cross\") &&\n      (a[2] === \"circle\" || a[2] === \"cross\") &&\n      (a[3] === \"circle\" || a[3] === \"cross\") &&\n      (a[4] === \"circle\" || a[4] === \"cross\") &&\n      (a[5] === \"circle\" || a[5] === \"cross\") &&\n      (a[6] === \"circle\" || a[6] === \"cross\") &&\n      (a[7] === \"circle\" || a[7] === \"cross\") &&\n      (a[8] === \"circle\" || a[8] === \"cross\") &&\n      (a[1] === \"circle\" || a[1] === \"cross\")\n    ) {\n      setWinMessage(\"Match is Tie\");\n    }\n  };\n\n  const changeItem = (index) => {\n    if (winMessage) {\n      return toast(\"Game has already got over\", { type: \"success\" });\n    }\n    if (a[index] === \"\") {\n      a[index] = isCross ? \"cross\" : \"circle\";\n      setIsCross(!isCross);\n    } else {\n      return toast(\"Open your eyes dude where are you tapping\", {\n        type: \"error\",\n      });\n    }\n    findWinner();\n  };\n\n  return (\n    <>\n      <Container className=\"p-5\">\n        <ToastContainer position=\"bottom-center\"></ToastContainer>\n        <Row>\n          <Col md={6} className=\"offset-md-3\">\n            {winMessage ? (\n              <div className=\"text-center\">\n                <h1 className=\"text-center\">{winMessage}</h1>\n                <Button className=\"button\" onClick={playAgain}>\n                  Play Again\n                </Button>\n                <div className=\"mb-3\"></div>\n              </div>\n            ) : (\n              <>\n                <h1 className=\"text-center\">\n                  {isCross ? \"Cross's Turn\" : \"Circle's Turn\"}\n                </h1>\n                <div className=\"mb-5 pt-1\"></div>\n              </>\n            )}\n            <div className=\"grid\">\n              {a.map((value, index) => (\n                <Card onClick={() => changeItem(index)}>\n                  <CardBody className=\"box\">\n                    <Icon choice={a[index]} />\n                  </CardBody>\n                </Card>\n              ))}\n            </div>\n          </Col>\n        </Row>\n        <h1 className=\"text-center pt-3\">\n          Start with{\" \"}\n          <FaTimes onClick={() => setIsCross(true)} className=\"icon\" />{\" \"}\n          <FaRegCircle onClick={() => setIsCross(false)} className=\"icon\" />\n        </h1>\n        <p className=\"footer\">Made By Mukesh Kumar with ðŸ’–</p>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}